global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot          /var/lib/haproxy
	stats socket    /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout   30s
	user            haproxy
	group           haproxy
	daemon

ssl-default-bind-ciphers TLS+ECDHE+RSA+WITH+AES+256+GCM+SHA384:TLS+ECDHE+ECDSA+WITH+AES+256+GCM+SHA384:TLS+ECDH+RSA+WITH+AES+256+GCM+SHA384:TLS+ECDH+ECDSA+WITH+AES+256+GCM+SHA384:TLS+ECDHE+RSA+WITH+AES+128+GCM+SHA256:TLS+ECDHE+ECDSA+WITH+AES+128+GCM+SHA256:TLS+ECDH+RSA+WITH+AES+128+GCM+SHA256:TLS+ECDH+ECDSA+WITH+AES+128+GCM+SHA256:TLS+ECDHE+RSA+WITH+AES+256+CBC+SHA384:TLS+ECDHE+ECDSA+WITH+AES+256+CBC+SHA384:TLS+ECDHE+RSA+WITH+AES+256+CBC+SHA:TLS+ECDHE+ECDSA+WITH+AES+256+CBC+SHA:TLS+ECDH+RSA+WITH+AES+256+CBC+SHA384:TLS+ECDH+ECDSA+WITH+AES+256+CBC+SHA384:TLS+ECDH+RSA+WITH+AES+256+CBC+SHA:TLS+ECDH+ECDSA+WITH+AES+256+CBC+SHA:TLS+ECDHE+RSA+WITH+AES+128+CBC+SHA256:TLS+ECDHE+ECDSA+WITH+AES+128+CBC+SHA256:TLS+ECDHE+RSA+WITH+AES+128+CBC+SHA:TLS+ECDHE+ECDSA+WITH+AES+128+CBC+SHA:TLS+ECDH+RSA+WITH+AES+128+CBC+SHA256:TLS+ECDH+ECDSA+WITH+AES+128+CBC+SHA256:TLS+ECDH+RSA+WITH+AES+128+CBC+SHA:TLS+ECDH+ECDSA+WITH+AES+128+CBC+SHA:HIGH:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS

    tune.ssl.default-dh-param 4096

defaults
	log	    global
	mode	http
	option	httplog
	option	dontlognull
	option	forwardfor
	option	http-server-close
    timeout connect 5000
    timeout client  50000
    timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend public-http
    mode http
    bind 192.168.2.9:80 

    acl let-acl path_beg /.well-known/acme-challenge
    http-request redirect scheme https code 301 if !{ ssl_fc } !let-acl 

    use_backend let if let-acl
    default_backend notused

frontend public-https
    mode http
    bind 192.168.2.9:443 ssl crt /etc/haproxy/certs/XXXX.dyndns.org.pem

    acl is_www hdr_beg(host) -i www.XXXX
    http-request redirect code 301 location https://www.XXXX.dyndns.org  if !is_www

    acl is_root path -i /
    http-request redirect code 301 location https://www.XXXX.dyndns.org/cms if is_root

    acl sfa-acl path_beg /sfa
    acl nca-acl path_beg /nca

    use_backend sfa if sfa-acl
    use_backend nca if nca-acl

    default_backend cms

backend cms
    mode http
    acl is_192A hdr_dom(host) -i 192.168.2.9
    acl is_cmsms-admin path_beg /cms/admin
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request set-header X-Forwarded-Proto https if { ssl_fc } 
    server cms 192.168.2.9:801 check

backend nca
    http-response set-header Strict-Transport-Security "max-age=16000000; includeSubDomains; preload;"
    mode http
    server nca 192.168.2.99:81 check

backend sfa
    mode http
    option forwardfor
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    server sfa 192.168.2.99:84 check

backend let
    mode http
    server letsencrypt 192.168.2.9:800 check

backend notused
    mode http
    server letsencrypt 192.168.2.9:804 check

